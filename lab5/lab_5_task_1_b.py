# -*- coding: utf-8 -*-
"""Lab 5 Task 1_b.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M529CFhsJ1DTRzH8w-ioQITHXRF6kFcg
"""

from collections import defaultdict, deque

def bfs_sort(n, pre):
    graph = defaultdict(list)
    deg = [0] * (n + 1)
    for A, B in pre:
        graph[A].append(B)
        deg[B] += 1

    queue = deque()
    for i in range(1, n + 1):
        if deg[i] == 0:
            queue.append(i)

    result = []
    while queue:
        node = queue.popleft()
        result.append(node)
        for neighbor in graph[node]:
            deg[neighbor] -= 1
            if deg[neighbor] == 0:
                queue.append(neighbor)

    if len(result) != n:
        return "IMPOSSIBLE"

    return result

txt_input=open('/content/input1_b.txt','r')
txt_output=open('/content/output1_b.txt','w')

N, M = map(int, txt_input.readline().strip().split())
pre = [list(map(int, txt_input.readline().split())) for _ in range(M)]


order = bfs_sort(N, pre)
for i in order:
  print(i,end=' ',  file=txt_output)

txt_output.close()