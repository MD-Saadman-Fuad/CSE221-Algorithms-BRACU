# -*- coding: utf-8 -*-
"""Task_1.B.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xolkJV-lNJtS3wiio_YgAt6MD6vAfQBh
"""

#Task 1.B

txt_input=open('/content/input1b.txt', 'r')
txt_output=open('/content/output1b.txt', 'w')
test_case = (txt_input.readline()).split()

test = int(test_case[0])
sum = int(test_case[1])

list1=[]

for i in txt_input.readline().split(' '):
    list1.append(int(i))
def merge_sort(arr):
    if len(arr) <= 1:
        return arr

    mid = len(arr) // 2
    l = arr[:mid]
    r = arr[mid:]

    left = merge_sort(l)
    right = merge_sort(r)

    return merge(left, right)


def merge(left, right):
    merged = []
    i = j = 0

    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            merged.append(left[i])
            i += 1
        else:
            merged.append(right[j])
            j += 1

    merged+=left[i:]
    merged+=right[j:]
    return merged

array = merge_sort(list1)

left = 0
right = test - 1
out = 'IMPOSSIBLE'
flag = False

while left < right:
    x = array[left] + array[right]
    if x == sum:
        left_index = list1.index(array[left]) + 1
        right_index = list1.index(array[right]) + 1
        if left_index < right_index:
            print(left_index,  right_index,   file = txt_output)
        else:
            print(right_index, left_index,   file = txt_output)
        out = 'POSSIBLE'
        flag = True
        break
    elif x < sum:
        left += 1
    else:
        right -= 1
if not flag:
    print(out,  file = txt_output)


txt_output.close()