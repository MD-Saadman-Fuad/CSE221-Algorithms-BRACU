# -*- coding: utf-8 -*-
"""Lab 4 Task 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12VqGcZoJn6e1Vkpy_wy1VBivG773mIvo
"""

txt_input=open('/content/input3.txt','r')
txt_output=open('/content/output3.txt','w')
V, E = map(int, txt_input.readline().split())
G = [[] for i in range(V + 1)]
for i in range(E):
  m, n = map(int, txt_input.readline().split())
  G[m].append(n)
  G[n].append(m)

def DFS_Traversal(G, v):
  stack1 = [v]
  visited = set()
  path = []
  while stack1:
    popped = stack1.pop()
    if popped not in visited:
      path.append(popped)
      visited.add(popped)
      stack1.extend(reversed(G[popped]))
  return path

x = [0]*(V+1)
path = DFS_Traversal(G, 1)
txt_output.write(' '.join(map(str, path)))

txt_output.close()