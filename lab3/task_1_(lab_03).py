# -*- coding: utf-8 -*-
"""Task 1 (lab 03).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C-aXieOdvs_KGf8Xzsz1ocbnGxhADmdX
"""

#Task1 main
def merge_arr(arr, n):
    arr1 = [0]*n
    return mergesort(arr, arr1, 0, n-1)

def mergesort(arr, arr1, l, r):
    count = 0
    if l < r:
        mid = (l + r)//2
        count += mergesort(arr, arr1,l, mid)
        count += mergesort(arr, arr1, mid + 1, r)
        count += merge(arr, arr1, l, mid, r)
    return count

def merge(arr, arr1, l, mid, r):
    i = l
    j = mid + 1
    k = l
    count = 0

    while i <= mid and j <= r:
        if arr[i] <= arr[j]:
            arr1[k] = arr[i]
            k += 1
            i += 1
        else:
            arr1[k] = arr[j]
            count += (mid-i+1)
            k += 1
            j += 1

    while i <= mid:
        arr1[k] = arr[i]
        k += 1
        i += 1

    while j <= r:
        arr1[k] = arr[j]
        k += 1
        j += 1

    for l in range(l, r + 1):
        arr[l] = arr1[l]

    return count

txt_input=open('/content/input1.txt', 'r')
txt_output=open('/content/output1.txt', 'w')
test_case = (txt_input.readline())

test = int(test_case)
list1=[]
flag1 = False
numbers=(txt_input.readline()).split()
print(numbers)
arr=[]
for i in numbers:
  i2 = int(i)
  arr.append(i2)

print(arr)
n = len(arr)
result = merge_arr(arr, n)
print("Number of inversions are", result, file = txt_output)
txt_output.close()
print(arr)