# -*- coding: utf-8 -*-
"""Lab 6 Task 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B4Ypap2Dpf4PTbXnQvbXW6_l9AwH2sRl
"""

#task 1
import heapq as hq

def dijkstra(graph, source, n):
    distance = [-1] * (n + 1)
    distance[source] = 0

    priorQ = [(0, source)]

    while priorQ:
        dist, node = hq.heappop(priorQ)

        if distance[node] < dist:
            continue

        for neighbor, weight in graph[node]:
            new_dist = dist + weight
            if distance[neighbor] == -1 or new_dist < distance[neighbor]:
                distance[neighbor] = new_dist
                hq.heappush(priorQ, (new_dist, neighbor))

    return distance[1:]

# Read input
with open("/content/Input1.txt", "r") as txt_input, open("/content/output1.txt", "w") as txt_output:
  N, M = map(int, txt_input.readline().split())
  graph = [[] for i in range(N + 1)]

  for i in range(M):
      u, v, w = map(int, txt_input.readline().split())
      graph[u].append((v, w))

  source = int(txt_input.readline())

  path = dijkstra(graph, source, N)

  for i in path:
      print(i, end=' ', file = txt_output)
txt_output.close()