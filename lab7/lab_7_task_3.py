# -*- coding: utf-8 -*-
"""Lab 7 Task 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TcWnsU7WrD_sQvC03jUkTy3KVp_6hxDr
"""

#task 3

def findPr(parent, r):
    if parent[r] == r:
        return r
    parent[r] = findPr(parent, parent[r])
    return parent[r]

def find_circle(parent, sizes, A, B):
    parentA = findPr(parent, A)
    parentB = findPr(parent, B)

    if parentA != parentB:
        parent[parentB] = parentA
        sizes[parentA] += sizes[parentB]


with open("/content/input3.txt", "r") as txt_input, open("/content/output3.txt", "w") as txt_output:
  people, query = map(int, txt_input.readline().split())
  parent = [i for i in range(people + 1)]
  sizes = [1] * (people + 1)

  for i in range(query):
      A, B = map(int, txt_input.readline().split())
      find_circle(parent, sizes, A, B)
      print(sizes[findPr(parent, A)], file=txt_output)
txt_output.close()